---
import config from "@/config/config.json";
import menu from "@/config/menu.json";
import Logo from "./Logo.astro";

export interface ChildNavigationLink {
  name: string;
  url: string;
}

export interface NavigationLink {
  name: string;
  url: string;
  hasChildren?: boolean;
  children?: ChildNavigationLink[];
}

const { main }: { main: NavigationLink[] } = menu;
const { navigation_button, settings } = config;
const { pathname } = Astro.url;

---

<header class={`z-50 ${settings.sticky_header && "sticky top-0"}`}>
  <nav class="navbar bg-base-100">
    <div class="navbar bg-base-100">
      <div class="navbar-start">
        <div class="dropdown">
          <label tabindex="0" class="btn btn-ghost lg:hidden">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
              ><path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4 6h16M4 12h8m-8 6h16"></path></svg
            >
          </label>
          <ul
            tabindex="0"
            class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52"
          >
            {
              main.map((menu) => (
                <>
                  {menu.hasChildren ? (
                    <li>
                      <span
                        class={` ${
                          menu.children
                            ?.map(({ url }) => url)
                            .includes(pathname) ||
                          menu.children
                            ?.map(({ url }) => `${url}/`)
                            .includes(pathname)
                            ? "active"
                            : ""
                        }`}
                      >
                        {menu.name}
                        <svg class="h-4 w-4 fill-current" viewBox="0 0 20 20">
                          <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
                        </svg>
                      </span>
                      <ul class="p-2">
                        {menu.children?.map((child) => (
                          <li>
                            <a
                              href={child.url}
                              class={`${
                                (pathname === `${child.url}/` ||
                                  pathname === child.url) &&
                                "active"
                              }`}
                            >
                              {child.name}
                            </a>
                          </li>
                        ))}
                      </ul>
                    </li>
                  ) : (
                    <li>
                      <a
                        href={menu.url}
                        class={`${
                          (pathname === `${menu.url}/` ||
                            pathname === menu.url) &&
                          "active"
                        }`}
                      >
                        {menu.name}
                      </a>
                    </li>
                  )}
                </>
              ))
            }
          </ul>
        </div>
        <Logo />
      </div>
      <div class="navbar-center hidden lg:flex">
        <ul class="menu menu-horizontal px-1">
          {
            main.map((menu) => (
              <>
                {menu.hasChildren ? (
                  <li tabindex="0">
                    <details>
                      <summary
                        class={` ${
                          menu.children
                            ?.map(({ url }) => url)
                            .includes(pathname) ||
                          menu.children
                            ?.map(({ url }) => `${url}/`)
                            .includes(pathname)
                            ? "active"
                            : ""
                        }`}
                      >
                        {menu.name}
                      </summary>

                      <ul class="p-2">
                        {menu.children?.map((child) => (
                          <li>
                            <a
                              class={`${
                                (pathname === `${child.url}/` ||
                                  pathname === child.url) &&
                                "active"
                              }`}
                              href={child.url}
                            >
                              {child.name}
                            </a>
                          </li>
                        ))}
                      </ul>
                    </details>
                  </li>
                ) : (
                  <li class="px-1">
                    <a
                      class={`${
                        (pathname === `${menu.url}/` ||
                          pathname === menu.url) &&
                        "active"
                      }`}
                      href={menu.url}
                    >
                      {menu.name}
                    </a>
                  </li>
                )}
              </>
            ))
          }
        </ul>
      </div>
      <!-- navbar end button -->
      <div class="navbar-end">
        {
          navigation_button.enable && pathname == '/' && (
            <a href={navigation_button.link} class="btn btn-primary">
              {navigation_button.label}
            </a>
          )
        }
				<div class="dropdown">
					<div tabindex="0" role="button" class="btn m-1">
						Theme
						<svg width="12px" height="12px" class="h-2 w-2 fill-current opacity-60 inline-block" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048"><path d="M1799 349l242 241-1017 1017L7 590l242-241 775 775 775-775z"></path></svg>
					</div>
					<ul tabindex="0" class="dropdown-content z-[1] p-2 shadow-2xl bg-base-300 rounded-box w-52">
						<li><input type="radio" name="theme-dropdown" class="theme-controller btn btn-sm btn-block btn-ghost justify-start" aria-label="Default" value="nord"/></li>
						<li><input type="radio" name="theme-dropdown" class="theme-controller btn btn-sm btn-block btn-ghost justify-start" aria-label="Retro" value="retro"/></li>
						<li><input type="radio" name="theme-dropdown" class="theme-controller btn btn-sm btn-block btn-ghost justify-start" aria-label="Cyberpunk" value="cyberpunk"/></li>
						<li><input type="radio" name="theme-dropdown" class="theme-controller btn btn-sm btn-block btn-ghost justify-start" aria-label="Dracula" value="dracula"/></li>
						<li><input type="radio" name="theme-dropdown" class="theme-controller btn btn-sm btn-block btn-ghost justify-start" aria-label="Coffee" value="coffee"/></li>
						<li><input type="radio" name="theme-dropdown" class="theme-controller btn btn-sm btn-block btn-ghost justify-start" aria-label="Dark" value="business"/></li>
					</ul>
				</div>
        <!-- <div class="mx-3">
				<label class="cursor-pointer grid place-items-center">
					<input type="checkbox" value={ window && window.matchMedia('(prefers-color-scheme: light)').matches ? 'catppuccin-mochiata' : "catpuccin-latte"} class="toggle theme-controller bg-base-content row-start-1 col-start-1 col-span-2"/>
					<svg class="col-start-1 row-start-1 stroke-base-100 fill-base-100" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="5"/><path d="M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4"/></svg>
					<svg class="col-start-2 row-start-1 stroke-base-100 fill-base-100" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path></svg>
				</label>
			</div> -->
      </div>
    </div>
  </nav>
</header>

<script>
	const inputEl = document.querySelectorAll('input[name=theme-dropdown]');
	inputEl.forEach((el) => {
		el.addEventListener('change', (e) => {
			const target = e.target as HTMLInputElement;
			const theme = target.value;
			document.cookie = "theme=" +theme+"; SameSite=Lax; path='/' ";
		});
	});
</script>